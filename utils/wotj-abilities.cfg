#textdomain wesnoth-War_of_the_Jewel

####################################################################### WEAPON ABILITIES ################################################

#define WEAPON_SPECIAL_UNERRING

    [chance_to_hit]
        id=unerring
        name= _ "unerring"
        description= _ "This attack always hits, be it in offense or in defence."
        value=100
        cumulative=no
        special_note=_"This attack always hits, be it in offense or in defence."
    [/chance_to_hit]
#enddef

#define WEAPON_SPECIAL_GREATPLAGUE
    # Canned definition of the Plague ability to be included in a
    # [specials] clause.
    [plague]
        id=greatplague
        name= _ "greater plague"
        description= _ "When a unit is killed by a Greater Plague attack, that unit is replaced with a Soulless on the same side as the unit with the Greater Plague attack. This doesnâ€™t work on Undead or units in villages."
        type=Soulless
        special_note=_"When a unit is killed by a Greater Plague attack, that unit is replaced with a Soulless on the same side as the unit with the Greater Plague attack. This doesn't work on Undead or units in villages."
    [/plague]
#enddef

#define WEAPON_SPECIAL_DEADWHIRLWIND
    [attacks]
        id=dead_whirlwind
        name= _ "whirlwind"
        name_inactive= _ "whirlwind"
        description= _ "When this attack is used, all units adjacent the attacker take the damage."
        description_inactive= _ "When this attack is used, all units adjacent the attacker take the damage."
        apply_to=opponent
        special_note= _ "When this attack is used, all units adjacent the attacker take the damage."
    [/attacks]
#enddef

#define WEAPON_SPECIAL_LIFE_CONSUMER
    [dummy]
        id=weapon_life_consumer
        name= _ "life consumer"
        name_inactive= _ "life consumer"
        description= _ "The power needed for this attack is so great that it causes the unit to lose 16 hp, and even cause its death if its life reaches 0 or below."
        description_inactive= _ "The power needed for this attack is so great that it causes the unit to lose 16 hp, and even cause its death if its life reaches 0 or below."
        apply_to=self
        special_note=_ "The power needed for this attack is so great that it causes the unit to lose 16 hp, and even cause its death if its life reaches 0 or below."
    [/dummy]
#enddef

#define WEAPON_SPECIAL_LESSER_LIFE_CONSUMER
    [dummy]
        id=weapon_lesser_life_consumer
        name= _ "lesser life consumer"
        name_inactive= _ "lesser life consumer"
        description= _ "The power needed for this attack is so great that it causes the unit to lose 8 hp, but never killing it."
        description_inactive= _ "The power needed for this attack is so great that it causes the unit to lose 8 hp, but never killing it."
        apply_to=self
        special_note=_ "The power needed for this attack is so great that it causes the unit to lose 8 hp, and even cause its death if its life reaches 0 or below."
    [/dummy]
#enddef

#define WEAPON_SPECIAL_WHIRLWIND
    [attacks]
        id=whirlwind
        name= _ "whirlwind"
        name_inactive= _ "whirlwind"
        description= _ "When this attack is used, all units adjacent the attacker take the damage."
        description_inactive= _ "When this attack is used, all units adjacent the attacker take the damage."
        apply_to=opponent
        special_note=_ "When this attack is used, all units adjacent the attacker take the damage, and cannot be countered."
    [/attacks]
#enddef

#define WEAPON_SPECIAL_EXPLOSIVE
    [damage]
        id=explosive
        name= _ "explosive"
        description= _ "When this attack is used, all units adjacent to the target take 75% of the damage, allies included, and even those behind them will take a few if the damage is sufficiently high."
        special_note=_"When this attack is used, all units adjacent to the target take 75% of the damage, allies included, and even those behind them will take a few if the damage is sufficiently high."
    [/damage]
#enddef

#define WEAPON_SPECIAL_PICKPOCKET

    # Canned definition of the pickpocket ability to be included in a

    # [specials] clause.
    # dummy weapon special used to describe the effect to the user
    # and filter on special's id
    [dummy]
        id=weapon_pickpocket
        name= _ "pickpocket"
        name_inactive= _ "pickpocket"
        description= _ "Gain money for attacking your foe. Each strike scores you two gold."
        description_inactive= _ "Gain money for attacking your foe. Each strike scores you two gold."
        apply_to=opponent
        special_note= _ "Gain money for attacking your foe. Each strike scores you two gold."
    [/dummy]
#enddef

################################################################# HALO ABILITIES ########################################################

#define ABILITY_OBSCURES
    # Canned definition of the Obscures ability to be included in an
    # [abilities] clause.
    [illuminates]
        id=obscure
        value=-25
        min_value=-25
        cumulative=no
        name= _ "obscures"
        female_name= _ "female^obscures"
        description=_ "This unit darkens the surrounding area, making chaotic units fight better, and lawful units fight worse.

Any units adjacent to this unit will fight as if it were dusk when it is day, and as if it were night when it is dusk."
        affect_self=yes
        special_note=_"This unit darkens the surrounding area, making chaotic units fight better, and lawful units fight worse.

Any units adjacent to this unit will fight as if it were dusk when it is day, and as if it were night when it is dusk."
    [/illuminates]
#enddef

#define ABILITY_TERROR_LEVEL_3
    [leadership]
        id=terror
        value=-60
        cumulative=no
        {__ABILITY_TSTRING_TERROR}
        affect_self=no
        affect_allies=no
        affect_enemies=yes
        [affect_adjacent]
            adjacent=n,ne,se,s,sw,nw
            [filter]
                level=0
            [/filter]
        [/affect_adjacent]
        special_note=_ " This unit can frighten enemy units that are next to it, making them fight worse."
    [/leadership]
    [leadership]
        id=terror
        value=-45
        cumulative=no
        affect_self=no
        affect_allies=no
        affect_enemies=yes
        [affect_adjacent]
            adjacent=n,ne,se,s,sw,nw
            [filter]
                level=1
            [/filter]
        [/affect_adjacent]
    [/leadership]
    [leadership]
        id=terror
        value=-30
        cumulative=no
        affect_self=no
        affect_allies=no
        affect_enemies=yes
        [affect_adjacent]
            adjacent=n,ne,se,s,sw,nw
            [filter]
                level=2
            [/filter]
        [/affect_adjacent]
    [/leadership]
    [leadership]
        id=terror
        value=-15
        cumulative=no
        affect_self=no
        affect_allies=no
        affect_enemies=yes
        [affect_adjacent]
            adjacent=n,ne,se,s,sw,nw
            [filter]
                level=3
            [/filter]
        [/affect_adjacent]
    [/leadership]
#enddef

#define ABILITY_TERROR_LEVEL_5
    [leadership]
        id=terror
        value=-90
        cumulative=no
        {__ABILITY_TSTRING_TERROR}
        affect_self=no
        affect_allies=no
        affect_enemies=yes
        [affect_adjacent]
            adjacent=n,ne,se,s,sw,nw
            [filter]
                level=0
            [/filter]
        [/affect_adjacent]
        special_note=_ " This unit can frighten enemy units that are next to it, making them fight worse."
    [/leadership]
    [leadership]
        id=terror
        value=-75
        cumulative=no
        affect_self=no
        affect_allies=no
        affect_enemies=yes
        [affect_adjacent]
            adjacent=n,ne,se,s,sw,nw
            [filter]
                level=1
            [/filter]
        [/affect_adjacent]
    [/leadership]
    [leadership]
        id=terror
        value=-50
        cumulative=no
        affect_self=no
        affect_allies=no
        affect_enemies=yes
        [affect_adjacent]
            adjacent=n,ne,se,s,sw,nw
            [filter]
                level=2
            [/filter]
        [/affect_adjacent]
    [/leadership]
    [leadership]
        id=terror
        value=-35
        cumulative=no
        affect_self=no
        affect_allies=no
        affect_enemies=yes
        [affect_adjacent]
            adjacent=n,ne,se,s,sw,nw
            [filter]
                level=3
            [/filter]
        [/affect_adjacent]
    [/leadership]
    [leadership]
        id=terror
        value=-15
        cumulative=no
        affect_self=no
        affect_allies=no
        affect_enemies=yes
        [affect_adjacent]
            adjacent=n,ne,se,s,sw,nw
            [filter]
                level=4
            [/filter]
        [/affect_adjacent]
    [/leadership]
#enddef

#define __ABILITY_TSTRING_TERROR
    name= _ "terror"
    description= _ "This unit can frighten enemy units that are next to it, making them fight worse.

Adjacent enemy units of lower level will do less damage in battle. When an enemy unit of the same or lower level is adjacent and engages in combat, its attacks do 15% less damage times the difference in their levels + 15%."
#enddef

################################################################# SELF-AFFECTING ABILITIES #########################################

#define ABILITY_MOUNTAIN_AMBUSH
    # Canned definition of the Ambush ability to be included in an
    # [abilities] clause.
    [hides]
        id=mountain_ambush
        name= _ "mountain ambush"
        female_name= _ "female^mountain ambush"
        name_inactive= _ "mountain ambush"
        female_name_inactive= _ "female^mountain ambush"
        description= _ "This unit can hide in mountainous terrain, and remain undetected by its enemies.

Enemy units cannot see this unit while it is on a mountain, except if they have units next to it. Any enemy unit that first discovers this unit immediately loses all its remaining movement."
        description_inactive= _ "This unit can hide in mountainous terrain, and remain undetected by its enemies.

Enemy units cannot see this unit while it is on a mountain, except if they have units next to it. Any enemy unit that first discovers this unit immediately loses all its remaining movement."
        affect_self=yes
        [filter]
            [filter_location]
                terrain=Mm,Md,Ms
            [/filter_location]
        [/filter]
        special_note=_" On mountainous terrain, this unit's ambush skill renders it invisible to enemies unless it is immediately adjacent or has revealed itself by attacking."
    [/hides]
#enddef

#define ABILITY_FOREST_WATER_AMBUSH

    [hides]
        id=forest_water_ambush
        name= _ "forest and water ambush"
        female_name= _ "female^forest and water ambush"
        name_inactive= _ "forest and water ambush"
        female_name_inactive= _ "female^forest and water ambush"
        description= _ "This unit can hide in both forest and water, and remain undetected by its enemies.

Enemy units cannot see this unit while it is in either forest or water, except if they have units next to it. Any enemy unit that first discovers this unit immediately loses all its remaining movement."
        description_inactive= _ "This unit can hide in both forest and water, and remain undetected by its enemies.

Enemy units cannot see this unit while it is in forest, except if they have units next to it. Any enemy unit that first discovers this unit immediately loses all its remaining movement."
        affect_self=yes
        [filter]
            [filter_location]
                terrain=*^F*,Wwg,Ww,Wwt,Wwr,Wwrt,Ss,Sm,Ww^Ewl,Ww^Ewf,Gg^Bw/,Gg^Bw|,Gg^Bw\,Gg^Bw/r,Gg^Bw|r,Gg^Bw\r,Gg^Bsb/,Gg^Bsb|,Gg^Bsb\
            [/filter_location]
        [/filter]
        special_note=_" On forested or aquatic terrain, this unit's ambush skill renders it invisible to enemies unless it is immediately adjacent or has revealed itself by attacking."
    [/hides]
#enddef

#define ABILITY_SHIELDWALL
    [dummy]
        id=formation
        name= _ "shieldwall"
        female_name= _ "female^shieldwall"
        description= _ "This unit gains a +10% bonus to defense when another unit with the same ability is adjacent to it. However, this cannot raise the unitâ€™s defense above 70%."
        [filter]
            [filter_adjacent]
                ability=formation
                is_enemy=no
                count=1-5
            [/filter_adjacent]
        [/filter]
        special_note=_"This unit gains a +10% bonus to defense when another unit with the same ability is adjacent to it. However, this cannot raise the unit's defense above 70%."
    [/dummy]
    {FORMATION formation1 40 1-5}
    {FORMATION formation2 50 2-5}
    {FORMATION formation3 60 3-5}
    {FORMATION formation4 70 4-5}
    {FORMATION formation5 80 5}
#enddef

#define WEAPON_SPECIALS_EVENTS

    ############################################################################ EXPLOSIVE ##################################################

    [event]
        name=attacker_hits
        first_time_only=no

        [filter_attack]
            special_id=explosive
        [/filter_attack]
        {INCORPORATE_EFFECTS}
        [harm_unit]
            [filter]
                [filter_adjacent]
                    x,y=$x2,$y2
                [/filter_adjacent]
                [not]
                    x,y=$x2,$y2,$x1,$y1
                [/not]
                [enemy_of]
                    side=$x1,$y1
                [/enemy_of]
            [/filter]
            [filter_second]
                x,y=$x1,$y1
            [/filter_second]
            amount=$($($damage*3)/4-4)
            damage_type=$weapon.type
            fire_event=yes
            experience=no
        [/harm_unit]
        [if]
            [variable]
                name=damage
                greater_than=24	# If the damage is high enough, the range is increased.
            [/variable]
            [then]
                [harm_unit]
                    [filter]
                        [filter_location]
                            # Exclude the units that just received the damage.
                            [not]
                                x,y=$x2,$y2
                                radius=1
                            [/not]
                            # Include the remaining units within two hexes.
                            [and]
                                x,y=$x2,$y2
                                radius=2
                                # The blaze cannot go through walls.
                                [filter_radius]
                                    terrain=!,X*,X*^*,*^X*
                                [/filter_radius]
                            [/and]
                        [/filter_location]
                        [enemy_of]
                            side=$x1,$y1
                        [/enemy_of]
                    [/filter]
                    [filter_second]
                        x,y=$x1,$y1
                    [/filter_second]

                    amount=$($($damage*3)/4-18)
                    damage_type=$weapon.type
                    fire_event=yes
                    experience=no
                    animate=no
                [/harm_unit]
            [/then]
        [/if]
        [if]
            [variable]
                name=damage
                greater_than=48		# If the damage is extremely high, the range is increased even more.
            [/variable]
            [then]
                [harm_unit]
                    [filter]
                        [filter_location]
                            # Exclude the units that just received the damage.
                            [not]
                                x,y=$x2,$y2
                                radius=2
                            [/not]
                            # Include the remaining units within two hexes.
                            [and]
                                x,y=$x2,$y2
                                radius=3
                                # The blaze cannot go through walls.
                                [filter_radius]
                                    terrain=!,X*,X*^*,*^X*
                                [/filter_radius]
                            [/and]
                        [/filter_location]
                        [enemy_of]
                            side=$x1,$y1
                        [/enemy_of]
                    [/filter]
                    [filter_second]
                        x,y=$x1,$y1
                    [/filter_second]

                    amount=$($($damage)/2-24)
                    damage_type=$weapon.type
                    fire_event=yes
                    experience=no
                    animate=no
                [/harm_unit]
            [/then]
        [/if]
        [if]
            [variable]
                name=damage
                greater_than=108		# If the damage is higher than most common attacks can get, the range is increased even even more.
            [/variable]
            [then]
                [harm_unit]
                    [filter]
                        [filter_location]
                            # Exclude the units that just received the damage.
                            [not]
                                x,y=$x2,$y2
                                radius=3
                            [/not]
                            # Include the remaining units within two hexes.
                            [and]
                                x,y=$x2,$y2
                                radius=4s
                                # The blaze cannot go through walls.
                                [filter_radius]
                                    terrain=!,X*,X*^*,*^X*
                                [/filter_radius]
                            [/and]
                        [/filter_location]
                        [enemy_of]
                            side=$x1,$y1
                        [/enemy_of]
                    [/filter]
                    [filter_second]
                        x,y=$x1,$y1
                    [/filter_second]

                    amount=$($($damage)/3-36)
                    damage_type=$weapon.type
                    fire_event=yes
                    experience=no
                    animate=no
                [/harm_unit]
            [/then]
        [/if]
        {CLEAR_VARIABLE damage}
    [/event]

    ################################################################## LIFE CONSUMER ###################################################

    [event]
        name=attack end
        first_time_only=no
        [filter_attack]
            special_id=weapon_life_consumer
        [/filter_attack]
        [store_unit]
            [filter]
                x,y=$x1,$y1
            [/filter]
            variable=unit_att_with_life_consumer
            mode=append
        [/store_unit]
        [set_variable]
            name=unit_att_with_life_consumer.variables.life_consumer_has_worked
            value=yes
        [/set_variable]
        [unstore_unit]
            variable=unit_att_with_life_consumer
        [/unstore_unit]
        {CLEAR_VARIABLE unit_att_with_life_consumer}
    [/event]
    [event]
        name=attack end
        first_time_only=no
        [filter_attack]
            special_id=weapon_life_consumer
        [/filter_attack]
        [store_unit]
            [filter]
                x,y=$x1,$y1
            [/filter]
            variable=life_consumer
            mode=append
        [/store_unit]

        [if]
            [variable]
                name=life_consumer.variables.life_consumer_has_worked
                equals=yes
            [/variable]
            [then]
                [harm_unit]
                    [filter]
                        x,y=$x1,$y1
                    [/filter]
                    amount=16
                    kill=yes
                    animate=yes
                    fire_event=yes
                [/harm_unit]
            [/then]
        [/if]
        {CLEAR_VARIABLE life_consumer}
    [/event]

    ######################################################################### LESSER LIFE CONSUMER ###########################################

    # event that creates a "lesser life consumer has worked" variable
    # and sets it to "yes" if the attacker hits at least once.
    [event]
        name=attack end
        first_time_only=no
        [filter_attack]
            special_id=weapon_lesser_life_consumer
        [/filter_attack]
        [store_unit]
            [filter]
                x,y=$x1,$y1
            [/filter]
            variable=unit_att_with_lesser_life_consumer
            mode=append
        [/store_unit]
        [set_variable]
            name=unit_att_with_lesser_life_consumer.variables.lesser_life_consumer_has_worked
            value=yes
        [/set_variable]
        [unstore_unit]
            variable=unit_att_with_lesser_life_consumer
        [/unstore_unit]
        {CLEAR_VARIABLE unit_att_with_lesser_life_consumer}
    [/event]
    [event]
        name=attack end
        first_time_only=no
        [filter_attack]
            special_id=weapon_lesser_life_consumer
        [/filter_attack]
        [store_unit]
            [filter]
                x,y=$x1,$y1
            [/filter]
            variable=lesser_life_consumer
            mode=append
        [/store_unit]

        [if]
            [variable]
                name=lesser_life_consumer.variables.lesser_life_consumer_has_worked
                equals=yes
            [/variable]
            [then]
                [harm_unit]
                    [filter]
                        x,y=$x1,$y1
                    [/filter]
                    amount=8
                    kill=no
                    animate=yes
                    fire_event=yes
                [/harm_unit]
            [/then]
        [/if]
        {CLEAR_VARIABLE lesser_life_consumer}
    [/event]

    ################################################################################ WHIRLWIND #################################################

    # Event for the Whirlwind special

    [event]
        name=attacker_hits
        first_time_only=no
        [filter_attack]
            special_id=whirlwind
        [/filter_attack]
        {VARIABLE has_drain 0}      # Notifies the weapon specials
        {VARIABLE has_slow no}
        {VARIABLE has_poison no}
        [if]
            [variable]
                name=weapon.specials.drains.id
                equals=drains
            [/variable]
            [then]
                {VARIABLE has_drain 1}
            [/then]
        [/if]
        [if]
            [variable]
                name=weapon.specials.poison.id
                equals=poison
            [/variable]
            [then]
                {VARIABLE has_poison yes}
            [/then]
        [/if]
        [if]
            [variable]
                name=weapon.specials.slow.id
                equals=slow
            [/variable]
            [then]
                {VARIABLE has_slow yes}
            [/then]
        [/if]
        [if]
            [variable]
                name=has_drain
                equals=0
            [/variable]
            [else]
                [store_unit]      #We need to know how many units were drained, and what were their resistances
                    [filter]
                        [filter_adjacent]
                            x,y=$x1,$y1
                        [/filter_adjacent]
                        [not]
                            side=$unit.side              #If you want to use it in an era, use side=$unit.side instead
                        [/not]
                        [not]         #The target unit is already hit by the attack
                            x,y=$x2,$y2
                        [/not]
                        [not]          #Undead are undrainable
                            race=undead
                        [/not]
                    [/filter]
                    variable=units
                [/store_unit]
                {VARIABLE healed_amount 0}
                [foreach]
                    array=units
                    [do]
                        [switch]            #Check the resistances
                            variable=weapon.type
                            [case]
                                value=arcane
                                {VARIABLE_OP healed_amount add "$($this_item.resistance.arcane*$weapon.damage)"}
                            [/case]
                            [case]
                                value=fire
                                {VARIABLE_OP healed_amount add "$($this_item.resistance.fire*$weapon.damage)"}
                            [/case]
                            [case]
                                value=cold
                                {VARIABLE_OP healed_amount add "$($this_item.resistance.cold*$weapon.damage)"}
                            [/case]
                            [case]
                                value=blade
                                {VARIABLE_OP healed_amount add "$($this_item.resistance.blade*$weapon.damage)"}
                            [/case]
                            [case]
                                value=pierce
                                {VARIABLE_OP healed_amount add "$($this_item.resistance.pierce*$weapon.damage)"}
                            [/case]
                            [case]
                                value=impact
                                {VARIABLE_OP healed_amount add "$($this_item.resistance.impact*$weapon.damage)"}
                            [/case]
                        [/switch]
                    [/do]
                [/foreach]
                [store_unit]        #Float the healed amount over the unit, like if it had drained
                    [filter]    #Two numbers will float, the one from the regular hit and one from this
                        x,y=$x1,$y1
                    [/filter]
                    kill=no
                    variable=FLOATING_TEXT_temp
                [/store_unit]
                [unstore_unit]
                    variable=FLOATING_TEXT_temp
                    find_vacant=no
                    red,green,blue=0,255,0
                    text=$($healed_amount/200)         #Operating with huge numbers because rounding is a problem
                [/unstore_unit]
                {CLEAR_VARIABLE FLOATING_TEXT_temp}
                [heal_unit]
                    [filter]
                        x,y=$x1,&y1
                    [/filter]
                    amount=$($healed_amount/200)
                    animate=no
                [/heal_unit]
                {CLEAR_VARIABLE units}
                {CLEAR_VARIABLE healed_amount}
            [/else]
        [/if]
        [harm_unit]
            [filter]
                [filter_adjacent]
                    x,y=$x1,$y1
                [/filter_adjacent]
                [not]
                    side=$unit.side             #If you want to use it in an era, use side=$unit.side instead
                [/not]
                [not]             #If you want to use it in an era, use side=$unit.side instead
                    x,y=$x2,$y2
                [/not]
            [/filter]
            [filter_second]
                x,y=$x1,$y1
            [/filter_second]
            amount=$weapon.damage
            damage_type=$weapon.type
            fire_event=yes
            experience=no
            poisoned=$has_poison   #We have detected these two effects before
            slowed=$has_slow
        [/harm_unit]
        {CLEAR_VARIABLE has_slow}
        {CLEAR_VARIABLE has_poison}
        {CLEAR_VARIABLE has_drain}
    [/event]

    ######################################################################### DEAD WHIRLWIND ############################################

    # Special thanks to Dugi and trewe ;-)

    [event]
        id=dead_whirlwind_attacker_hits
        name=attacker_hits
        first_time_only=no

        [filter_attack]
            special_id=dead_whirlwind
        [/filter_attack]

        # check specials

        # add default values (note: 0/1 are not booleans)
        {VARIABLE dead_whirlwind.has_drain no}
        {VARIABLE dead_whirlwind.has_poison no}
        {VARIABLE dead_whirlwind.has_slow no}

        # check if they exist
        # NOTE this covers custom made specials too (where the id is changed)
        [if]
            {VARIABLE_CONDITIONAL weapon.specials.drains.id not_equals $empty_var}
            [then]
                {VARIABLE dead_whirlwind.has_drain yes}
            [/then]
        [/if]

        [if]
            {VARIABLE_CONDITIONAL weapon.specials.poison.id not_equals $empty_var}
            [then]
                {VARIABLE dead_whirlwind.has_poison yes}
            [/then]
        [/if]

        [if]
            {VARIABLE_CONDITIONAL weapon.specials.slow.id not_equals $empty_var}
            [then]
                {VARIABLE dead_whirlwind.has_slow yes}
            [/then]
        [/if]

        # store all surrounding enemy units
        [store_unit]
            [filter]
                [filter_adjacent]
                    x,y=$x1,$y1
                [/filter_adjacent]
                [not]
                    x,y=$x2,$y2
                [/not]
                [not]
                    [filter_side]
                        [allied_with]
                            side=$unit.side
                        [/allied_with]
                    [/filter_side]
                [/not]
            [/filter]
            variable=units
        [/store_unit]

        # calculate drain
        [if]
            {VARIABLE_CONDITIONAL dead_whirlwind.has_drain equals yes}
            [then]
                [foreach]
                    array=units
                    [do]
                        # only units which can be drained at all
                        [if]
    #ifver WESNOTH_VERSION > 1.11.0
                            {VARIABLE_CONDITIONAL $this_item.status.undrainable equals yes}
    #else
                            {VARIABLE_CONDITIONAL $this_item.status.not_living equals yes}
    #endif
                            [then]
                                {VARIABLE healed_amount "$($this_item.resistance.$weapon.type*$weapon.damage)"}

                                [floating_text]
                                    x,y=$x1,$y1
                                    text=_ "<span color='0,255,0'>"+"$($healed_amount/200)"+"</span>"
                                [/floating_text]

                                [heal_unit]
                                    [filter]
                                        x,y=$x1,$y1
                                    [/filter]
                                    amount="$($healed_amount/200)"
                                    animate=no # this should be set to yes (and the floating text above removed)
                                [/heal_unit]
                                {CLEAR_VARIABLE healed_amount}
                            [/then]
                        [/if]
                    [/do]
                [/foreach]
            [/then]
        [/if]

        # store time of day
        [store_time_of_day]
            variable=dead_whirlwind.tod
        [/store_time_of_day]

        # harm surrounding units
        [harm_unit]
            [filter]
                [filter_adjacent]
                    x,y=$x1,$y1
                [/filter_adjacent]
                [not]
                    [filter_side]
                        [allied_with]
                            side=$unit.side
                        [/allied_with]
                    [/filter_side]
                [/not]
                [not]
                    x,y=$x2,$y2
                [/not]
            [/filter]
            [filter_second]
                x,y=$x1,$y1
            [/filter_second]
            amount=$weapon.damage
            damage_type=$weapon.type
            alignment=$dead_whirlwind.tod.id
            animate=no # disabled here - it looks ugly
            fire_event=yes
            experience=no
            poisoned=$dead_whirlwind.has_poison
            slowed=$dead_whirlwind.has_slow
        [/harm_unit]

        # replace dead units with a Soulless
        # NOTE for balance purpose attacks_left and moves are set to 0 (like plaque would do)
        [foreach]
            array=units
            [do]
                [if]
                    [not]
                        [have_unit]
                            id=$this_item.id
                        [/have_unit]
                    [/not]
                    [not]
                        [variable]
                            name=this_item.status.not_living
                            equals=yes
                        [/variable]
                    [/not]
                    [then]
                        {GENERIC_UNIT $side_number Soulless $this_item.x $this_item.y}
                        [+unit]
                            animate=yes
                            attacks_left=0
                            moves=0
                        [/unit]
                    [/then]
                [/if]
            [/do]
        [/foreach]

        {CLEAR_VARIABLE dead_whirlwind,units}
    [/event]

    ##################################################################### PICKPOCKET ####################################################

    # event that creates a "pickpocket has worked" variable
    # and sets it to "yes" if the attacker hits at least once.
    [event]
        name=attack end
        first_time_only=no
        [filter_attack]
            special_id=weapon_pickpocket
        [/filter_attack]
        [store_unit]
            [filter]
                x,y=$x1,$y1
            [/filter]
            variable=unit_att_with_pickpocket
            mode=append
        [/store_unit]
        [set_variable]
            name=unit_att_with_pickpocket.variables.pickpocket_has_worked
            value=yes
        [/set_variable]
        [unstore_unit]
            variable=unit_att_with_pickpocket
        [/unstore_unit]
        {CLEAR_VARIABLE unit_att_with_pickpocket}
    [/event]
    [event]
        name=attack end
        first_time_only=no
        [filter_attack]
            special_id=weapon_pickpocket
        [/filter_attack]
        [store_unit]
            [filter]
                x,y=$x1,$y1
            [/filter]
            variable=pickpocketer
            mode=append
        [/store_unit]
        [store_unit]
            [filter]
                x,y=$x2,$y2
            [/filter]
            variable=pickpocketed
            mode=append
        [/store_unit]
        [if]
            [variable]
                name=pickpocketer.variables.pickpocket_has_worked
                equals=yes
            [/variable]
            [then]
                [gold]
                    side=$side_number
                    amount=2
                [/gold]
                [unstore_unit]
                    variable=pickpocketed
                    text=_ "!"
                    {COLOR_HEAL}
                [/unstore_unit]
            [/then]
        [/if]
        {CLEAR_VARIABLE pickpocketer}
        {CLEAR_VARIABLE pickpocketed}
    [/event]

#enddef
